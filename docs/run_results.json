{"results": [{"node": {"raw_sql": "", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "raw_orders"], "unique_id": "seed.jaffle_shop.raw_orders", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "raw_orders.csv", "original_file_path": "data/raw_orders.csv", "name": "raw_orders", "resource_type": "seed", "alias": "raw_orders", "checksum": {"name": "sha256", "checksum": "ee6c68d1639ec2b23a4495ec12475e09b8ed4b61e23ab0411ea7ec76648356f7"}, "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "quote_columns": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "deferred": false, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": ""}, "error": null, "status": null, "execution_time": 0.015493631362915039, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.693028Z", "completed_at": "2021-02-25T00:52:11.707671Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.707900Z", "completed_at": "2021-02-25T00:52:11.707908Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "raw_payments"], "unique_id": "seed.jaffle_shop.raw_payments", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "raw_payments.csv", "original_file_path": "data/raw_payments.csv", "name": "raw_payments", "resource_type": "seed", "alias": "raw_payments", "checksum": {"name": "sha256", "checksum": "03fd407f3135f84456431a923f22fc185a2154079e210c20b690e3ab11687d11"}, "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "quote_columns": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "deferred": false, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": ""}, "error": null, "status": null, "execution_time": 0.005671977996826172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.708831Z", "completed_at": "2021-02-25T00:52:11.713710Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.713951Z", "completed_at": "2021-02-25T00:52:11.713955Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "raw_customers"], "unique_id": "seed.jaffle_shop.raw_customers", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "raw_customers.csv", "original_file_path": "data/raw_customers.csv", "name": "raw_customers", "resource_type": "seed", "alias": "raw_customers", "checksum": {"name": "sha256", "checksum": "714f9e3dddfcd62fe967462621908ba59cae1502d1661ee8d8649ba7a56cb830"}, "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "quote_columns": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "deferred": false, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": ""}, "error": null, "status": null, "execution_time": 0.005925655364990234, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.714977Z", "completed_at": "2021-02-25T00:52:11.719800Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.720211Z", "completed_at": "2021-02-25T00:52:11.720217Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_orders') }}\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "staging", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "staging/stg_orders.sql", "original_file_path": "models/staging/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "checksum": {"name": "sha256", "checksum": "afffa9cbc57e5fd2cf5898ebf571d444a62c9d6d7929d8133d30567fb9a2ce97"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": ["staging", "hourly"], "full_refresh": null}, "tags": ["staging", "hourly"], "refs": [["raw_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_orders"]}, "description": "", "columns": {"order_id": {"name": "order_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_orders.sql", "deferred": false, "compiled_sql": "with source as (\n    select * from \"otis\".\"jaffle_shop\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"otis\".\"jaffle_shop\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed"}, "error": null, "status": null, "execution_time": 0.01684737205505371, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.721138Z", "completed_at": "2021-02-25T00:52:11.737279Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.737463Z", "completed_at": "2021-02-25T00:52:11.737469Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n    \n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_payments') }}\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "staging", "stg_payments"], "unique_id": "model.jaffle_shop.stg_payments", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "staging/stg_payments.sql", "original_file_path": "models/staging/stg_payments.sql", "name": "stg_payments", "resource_type": "model", "alias": "stg_payments", "checksum": {"name": "sha256", "checksum": "113502ed19f04efb2af0629ff139f57f7463347b6d5218f3b80a8d128cc96852"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": ["staging", "hourly"], "full_refresh": null}, "tags": ["staging", "hourly"], "refs": [["raw_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_payments"]}, "description": "", "columns": {"payment_id": {"name": "payment_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "payment_method": {"name": "payment_method", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_payments.sql", "deferred": false, "compiled_sql": "with source as (\n    select * from \"otis\".\"jaffle_shop\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"otis\".\"jaffle_shop\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed"}, "error": null, "status": null, "execution_time": 0.008629560470581055, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.738798Z", "completed_at": "2021-02-25T00:52:11.746385Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.746552Z", "completed_at": "2021-02-25T00:52:11.746556Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_customers') }}\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "staging", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "staging/stg_customers.sql", "original_file_path": "models/staging/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "checksum": {"name": "sha256", "checksum": "8aaf3f82d6948a706a8fd6e40493a59446ab84436c800b9bb986d6af6d3dc073"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": ["staging", "hourly"], "full_refresh": null}, "tags": ["staging", "hourly"], "refs": [["raw_customers"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.jaffle_shop.raw_customers"]}, "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/models/staging/stg_customers.sql", "deferred": false, "compiled_sql": "with source as (\n    select * from \"otis\".\"jaffle_shop\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"otis\".\"jaffle_shop\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed"}, "error": null, "status": null, "execution_time": 0.00768280029296875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.747606Z", "completed_at": "2021-02-25T00:52:11.754443Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.754606Z", "completed_at": "2021-02-25T00:52:11.754611Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_orders"], "unique_id": "model.jaffle_shop.customer_orders", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "marts/core/intermediate/customer_orders.sql", "original_file_path": "models/marts/core/intermediate/customer_orders.sql", "name": "customer_orders", "resource_type": "model", "alias": "customer_orders", "checksum": {"name": "sha256", "checksum": "20c96fcb3cf2235582de807d64cd1cdbdd3a419786bf1ceaae0ef208e7ed3dd7"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/intermediate/customer_orders.sql", "deferred": false, "compiled_sql": "with orders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with orders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.007257938385009766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.755412Z", "completed_at": "2021-02-25T00:52:11.762001Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.762174Z", "completed_at": "2021-02-25T00:52:11.762179Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.0167391300201416, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.762902Z", "completed_at": "2021-02-25T00:52:11.778963Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.779143Z", "completed_at": "2021-02-25T00:52:11.779149Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"stg_orders\"\nwhere order_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"stg_orders\"\nwhere order_id is null\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.008460044860839844, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.779921Z", "completed_at": "2021-02-25T00:52:11.787764Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.787948Z", "completed_at": "2021-02-25T00:52:11.787954Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from \"otis\".\"jaffle_shop\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from \"otis\".\"jaffle_shop\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.008503913879394531, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.788665Z", "completed_at": "2021-02-25T00:52:11.796472Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.796637Z", "completed_at": "2021-02-25T00:52:11.796641Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_payments"], "unique_id": "model.jaffle_shop.customer_payments", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "marts/core/intermediate/customer_payments.sql", "original_file_path": "models/marts/core/intermediate/customer_payments.sql", "name": "customer_payments", "resource_type": "model", "alias": "customer_payments", "checksum": {"name": "sha256", "checksum": "feb9a66904fe7968464b947a2289c795d58fbc7f1e14a3c9975dc261d94cb351"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/intermediate/customer_payments.sql", "deferred": false, "compiled_sql": "with payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_payments\"\n\n),\n\norders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_payments\"\n\n),\n\norders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.008405208587646484, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.797429Z", "completed_at": "2021-02-25T00:52:11.805198Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.805374Z", "completed_at": "2021-02-25T00:52:11.805378Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        {% for payment_method in payment_methods -%}\n        sum(case when payment_method = '{{payment_method}}' then amount else 0 end) as {{payment_method}}_amount,\n        {% endfor -%}\n\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "order_payments"], "unique_id": "model.jaffle_shop.order_payments", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "marts/core/intermediate/order_payments.sql", "original_file_path": "models/marts/core/intermediate/order_payments.sql", "name": "order_payments", "resource_type": "model", "alias": "order_payments", "checksum": {"name": "sha256", "checksum": "6af89b1b7d0e9fe6b2b54118cf2addf0bab34ccc49b054eab93f8d7056fb7c52"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/intermediate/order_payments.sql", "deferred": false, "compiled_sql": "\n\nwith payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_payments\"\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_payments\"\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.007951736450195312, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.806274Z", "completed_at": "2021-02-25T00:52:11.813448Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.813612Z", "completed_at": "2021-02-25T00:52:11.813616Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method", "model": "{{ ref('stg_payments') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card"], "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "resource_type": "test", "alias": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"otis\".\"jaffle_shop\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"otis\".\"jaffle_shop\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "payment_method"}, "error": null, "status": null, "execution_time": 0.010233402252197266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.814379Z", "completed_at": "2021-02-25T00:52:11.823938Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.824123Z", "completed_at": "2021-02-25T00:52:11.824129Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "payment_id", "model": "{{ ref('stg_payments') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_payments_payment_id", "resource_type": "test", "alias": "not_null_stg_payments_payment_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_payments_payment_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"stg_payments\"\nwhere payment_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"stg_payments\"\nwhere payment_id is null\n\n\n", "column_name": "payment_id"}, "error": null, "status": null, "execution_time": 0.008568525314331055, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.824892Z", "completed_at": "2021-02-25T00:52:11.832788Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.832971Z", "completed_at": "2021-02-25T00:52:11.832975Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "payment_id", "model": "{{ ref('stg_payments') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "unique_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/unique_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_payments_payment_id", "resource_type": "test", "alias": "unique_stg_payments_payment_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_payments_payment_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from \"otis\".\"jaffle_shop\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from \"otis\".\"jaffle_shop\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "payment_id"}, "error": null, "status": null, "execution_time": 0.008253335952758789, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.833678Z", "completed_at": "2021-02-25T00:52:11.841284Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.841472Z", "completed_at": "2021-02-25T00:52:11.841476Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"stg_customers\"\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"stg_customers\"\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.008198022842407227, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.842246Z", "completed_at": "2021-02-25T00:52:11.849755Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.849929Z", "completed_at": "2021-02-25T00:52:11.849933Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from \"otis\".\"jaffle_shop\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from \"otis\".\"jaffle_shop\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.00816202163696289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.850635Z", "completed_at": "2021-02-25T00:52:11.858178Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.858341Z", "completed_at": "2021-02-25T00:52:11.858345Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\ncustomer_orders as (\n\n    select * from {{ ref('customer_orders') }}\n\n),\n\ncustomer_payments as (\n\n    select * from {{ ref('customer_payments') }}\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "marts", "core", "dim_customers"], "unique_id": "model.jaffle_shop.dim_customers", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "marts/core/dim_customers.sql", "original_file_path": "models/marts/core/dim_customers.sql", "name": "dim_customers", "resource_type": "model", "alias": "dim_customers", "checksum": {"name": "sha256", "checksum": "95d544c0e900d9ac69d0471bad24e03c63a268dbc493559023b58b7618c49b3a"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_customers"], ["customer_orders"], ["customer_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.customer_orders", "model.jaffle_shop.customer_payments"]}, "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders", "columns": {"customer_id": {"name": "customer_id", "description": "This is a unique identifier for a customer", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_name": {"name": "first_name", "description": "Customer's first name. PII.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "last_name": {"name": "last_name", "description": "Customer's last name. PII.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "Customer's email address. PII.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_order": {"name": "first_order", "description": "Date (UTC) of a customer's first order", "meta": {}, "data_type": null, "quote": null, "tags": []}, "most_recent_order": {"name": "most_recent_order", "description": "Date (UTC) of a customer's most recent order", "meta": {}, "data_type": null, "quote": null, "tags": []}, "number_of_orders": {"name": "number_of_orders", "description": "Count of the number of orders a customer has placed", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_order_amount": {"name": "total_order_amount", "description": "Total value (AUD) of a customer's orders", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/models/marts/core/dim_customers.sql", "deferred": false, "compiled_sql": "with customers as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_customers\"\n\n),\n\ncustomer_orders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"customer_orders\"\n\n),\n\ncustomer_payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"customer_payments\"\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_customers\"\n\n),\n\ncustomer_orders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"customer_orders\"\n\n),\n\ncustomer_payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"customer_payments\"\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.01200246810913086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.859070Z", "completed_at": "2021-02-25T00:52:11.870435Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.870622Z", "completed_at": "2021-02-25T00:52:11.870627Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\norder_payments as (\n\n    select * from {{ ref('order_payments') }}\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        {% for payment_method in payment_methods -%}\n\n        order_payments.{{payment_method}}_amount,\n\n        {% endfor -%}\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "marts", "core", "fct_orders"], "unique_id": "model.jaffle_shop.fct_orders", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "marts/core/fct_orders.sql", "original_file_path": "models/marts/core/fct_orders.sql", "name": "fct_orders", "resource_type": "model", "alias": "fct_orders", "checksum": {"name": "sha256", "checksum": "49634cca4e40171ea98f62a1a3a9999e3487c42aca3ee79ecaaf99900ead1fd8"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_orders"], ["order_payments"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.order_payments"]}, "description": "This table has basic information about orders, as well as some derived facts based on payments", "columns": {"order_id": {"name": "order_id", "description": "This is a unique identifier for an order", "meta": {}, "data_type": null, "quote": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Foreign key to the customers table", "meta": {}, "data_type": null, "quote": null, "tags": []}, "order_date": {"name": "order_date", "description": "Date (UTC) that the order was placed", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |", "meta": {}, "data_type": null, "quote": null, "tags": []}, "amount": {"name": "amount", "description": "Total amount (AUD) of the order", "meta": {}, "data_type": null, "quote": null, "tags": []}, "credit_card_amount": {"name": "credit_card_amount", "description": "Amount of the order (AUD) paid for by credit card", "meta": {}, "data_type": null, "quote": null, "tags": []}, "coupon_amount": {"name": "coupon_amount", "description": "Amount of the order (AUD) paid for by coupon", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bank_transfer_amount": {"name": "bank_transfer_amount", "description": "Amount of the order (AUD) paid for by bank transfer", "meta": {}, "data_type": null, "quote": null, "tags": []}, "gift_card_amount": {"name": "gift_card_amount", "description": "Amount of the order (AUD) paid for by gift card", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/models/marts/core/fct_orders.sql", "deferred": false, "compiled_sql": "\n\nwith orders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\norder_payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"order_payments\"\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith orders as (\n\n    select * from \"otis\".\"jaffle_shop\".\"stg_orders\"\n\n),\n\norder_payments as (\n\n    select * from \"otis\".\"jaffle_shop\".\"order_payments\"\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.012770652770996094, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.871357Z", "completed_at": "2021-02-25T00:52:11.883464Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.883638Z", "completed_at": "2021-02-25T00:52:11.883643Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('dim_customers') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_dim_customers_customer_id", "resource_type": "test", "alias": "not_null_dim_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_dim_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"dim_customers\"\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"dim_customers\"\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.009006977081298828, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.884381Z", "completed_at": "2021-02-25T00:52:11.892627Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.892885Z", "completed_at": "2021-02-25T00:52:11.892890Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('dim_customers') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "unique_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/unique_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_dim_customers_customer_id", "resource_type": "test", "alias": "unique_dim_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.dim_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/unique_dim_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from \"otis\".\"jaffle_shop\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from \"otis\".\"jaffle_shop\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.008275270462036133, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.893640Z", "completed_at": "2021-02-25T00:52:11.901299Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.901461Z", "completed_at": "2021-02-25T00:52:11.901465Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/marts/core/schema.yml", "name": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"otis\".\"jaffle_shop\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"otis\".\"jaffle_shop\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.011073589324951172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.902200Z", "completed_at": "2021-02-25T00:52:11.912617Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.912803Z", "completed_at": "2021-02-25T00:52:11.912807Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "amount", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_amount", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_amount", "resource_type": "test", "alias": "not_null_fct_orders_amount", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_amount.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere amount is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere amount is null\n\n\n", "column_name": "amount"}, "error": null, "status": null, "execution_time": 0.00823211669921875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.913521Z", "completed_at": "2021-02-25T00:52:11.921104Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.921279Z", "completed_at": "2021-02-25T00:52:11.921284Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "bank_transfer_amount", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_bank_transfer_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_bank_transfer_amount", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_bank_transfer_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_bank_transfer_amount", "resource_type": "test", "alias": "not_null_fct_orders_bank_transfer_amount", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_bank_transfer_amount.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n\n", "column_name": "bank_transfer_amount"}, "error": null, "status": null, "execution_time": 0.00798797607421875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.922004Z", "completed_at": "2021-02-25T00:52:11.929414Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.929579Z", "completed_at": "2021-02-25T00:52:11.929583Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "coupon_amount", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_coupon_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_coupon_amount", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_coupon_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_coupon_amount", "resource_type": "test", "alias": "not_null_fct_orders_coupon_amount", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_coupon_amount.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere coupon_amount is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere coupon_amount is null\n\n\n", "column_name": "coupon_amount"}, "error": null, "status": null, "execution_time": 0.008403778076171875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.930346Z", "completed_at": "2021-02-25T00:52:11.937983Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.938171Z", "completed_at": "2021-02-25T00:52:11.938177Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "credit_card_amount", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_credit_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_credit_card_amount", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_credit_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_credit_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_credit_card_amount", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_credit_card_amount.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere credit_card_amount is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere credit_card_amount is null\n\n\n", "column_name": "credit_card_amount"}, "error": null, "status": null, "execution_time": 0.008601188659667969, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.938940Z", "completed_at": "2021-02-25T00:52:11.946872Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.947043Z", "completed_at": "2021-02-25T00:52:11.947048Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_customer_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_customer_id", "resource_type": "test", "alias": "not_null_fct_orders_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.008280277252197266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.947805Z", "completed_at": "2021-02-25T00:52:11.955463Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.955627Z", "completed_at": "2021-02-25T00:52:11.955631Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "gift_card_amount", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_gift_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_gift_card_amount", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_gift_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_gift_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_gift_card_amount", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_gift_card_amount.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere gift_card_amount is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere gift_card_amount is null\n\n\n", "column_name": "gift_card_amount"}, "error": null, "status": null, "execution_time": 0.008675336837768555, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.956521Z", "completed_at": "2021-02-25T00:52:11.964354Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.964525Z", "completed_at": "2021-02-25T00:52:11.964529Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/not_null_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_order_id", "resource_type": "test", "alias": "not_null_fct_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/not_null_fct_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere order_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom \"otis\".\"jaffle_shop\".\"fct_orders\"\nwhere order_id is null\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.008025407791137695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.965290Z", "completed_at": "2021-02-25T00:52:11.972721Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.972883Z", "completed_at": "2021-02-25T00:52:11.972887Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('dim_customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_"], "unique_id": "test.jaffle_shop.relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "original_file_path": "models/marts/core/schema.yml", "name": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "resource_type": "test", "alias": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"], ["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.jaffle_shop.dim_customers", "model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nselect count(*) as validation_errors\nfrom (\n    select customer_id as id from \"otis\".\"jaffle_shop\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"otis\".\"jaffle_shop\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nselect count(*) as validation_errors\nfrom (\n    select customer_id as id from \"otis\".\"jaffle_shop\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"otis\".\"jaffle_shop\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.009788751602172852, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.973599Z", "completed_at": "2021-02-25T00:52:11.982770Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.982933Z", "completed_at": "2021-02-25T00:52:11.982938Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('fct_orders') }}"}}, "compiled": true, "database": "otis", "schema": "jaffle_shop", "fqn": ["jaffle_shop", "schema_test", "unique_fct_orders_order_id"], "unique_id": "test.jaffle_shop.unique_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/home/edmund/tree/jaffle_shop", "path": "schema_test/unique_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_fct_orders_order_id", "resource_type": "test", "alias": "unique_fct_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.fct_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/marts/core/schema.yml/schema_test/unique_fct_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from \"otis\".\"jaffle_shop\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from \"otis\".\"jaffle_shop\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.008482694625854492, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-02-25T00:52:11.983659Z", "completed_at": "2021-02-25T00:52:11.991559Z"}, {"name": "execute", "started_at": "2021-02-25T00:52:11.991724Z", "completed_at": "2021-02-25T00:52:11.991728Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-02-25T00:52:11.999819Z", "elapsed_time": 10.367240905761719}